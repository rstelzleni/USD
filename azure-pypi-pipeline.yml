name: PyPI_Packaging

# Set a new package_version_number here for each new version of the packages you
# intend to publish.
variables:
- name: package_version_number
  value: 0.1.0

# Need a matrix of python versions for these builds

# Trigger this build whenever this pipeline file is changed. This way we will build
# new pypi packages each time we update the version number, or any other information
# listed here, like supported python versions.
trigger:
    branches:
        include:
        - dev
        - release
        - pypi-builds
    paths:
        include:
        - azure-pypi-pipeline.yml
        exclude:
        - /
 
jobs:

- job: Linux_Build_for_PyPI
  timeoutInMinutes: 90
  pool:
    vmImage: Ubuntu-18.04
  container:
    image: rstelzleni/usd-pypi-builder:latest
    options: -v /home/vsts/USDinst:/opt/USD/inst -v /home/vsts/dist:/opt/USD/dist
  steps:
  - bash: |
      AZURE_USER="$(whoami)"
      sudo chown -R $AZURE_USER /opt/USD
      sudo chmod -R 775 /opt/USD
    displayName: 'Creating build output directory'
  - bash: |
      /opt/python/cp36-cp36m/bin/python build_scripts/build_usd.py --for-pypi --build-args USD,"-Xlinker --allow-shlib-undefined -DPXR_BUILD_USD_TOOLS=OFF -DPXR_INSTALL_LOCATION=../pxr/pluginfo" --no-imaging --no-examples --no-tutorials --build /opt/USD/gen/build --src /opt/USD/gen/src /opt/USD/inst -v
    displayName: 'Building USD'
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: usd-pypi-linux
      targetPath: /home/vsts/USDinst
  - bash: |
      mkdir ./packaging
      cp -R /opt/USD/inst ./packaging
      cp build_scripts/pypi/package_files/* ./packaging
      cd ./packaging
    displayName: "Creating packaging directory"
  - bash: |
      /opt/python/cp36-cp36m/bin/python setup.py bdist_wheel --python-tag cp36
    displayName: 'Running setup.py'
  - bash: |
      PYTHONPATH=/opt/USD/pypi/lib/python LD_LIBRARY_PATH=/opt/USD/pypi/lib auditwheel repair ./dist/*.whl
    displayName: 'Running audtiwheel repair (moves .so files into package)'
  - bash: |
      WHEEL_PACKAGE_NAME=`ls /wheelhouse`
      /opt/python/cp36-cp36m/bin/python ../build_scripts/pypi/updatePluginfos.py "/wheelhouse/$WHEEL_PACKAGE_NAME" "./dist/$WHEEL_PACKAGE_NAME"
      cp "./dist/$WHEEL_PACKAGE_NAME" /opt/USD/inst
    displayName: 'Updating pluginfo paths'
  - task: PublishPipelineArtifact@0
    inputs:
      targetPath: /home/vsts/dist/*

- job: Windows_Build_for_PyPI
  timeoutInMinutes: 90
  pool:
    vmImage: 'VS2017-Win2016'
  steps:
  - task: UsePythonVersion@0
    versionSpec: 3.6
    addToPath: true
  - script: |
      call C:\"Program Files (x86)"\"Microsoft Visual Studio"\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat
      call set BOOST_ROOT=
      call python --version
      call [utjpm build_scripts/build_usd.py --for-pypi --build-args USD,"-DPXR_BUILD_USD_TOOLS=OFF -DPXR_INSTALL_LOCATION=../pxr/pluginfo" --no-imaging --no-examples --no-tutorials --build %HOME%/USDgen/build --src %HOME%/USDgen/src %HOME%/USDinst -v
    displayName: 'Building USD'
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'usd-pypi-win64'
      targetPath: "D:/USDinst"

- job: Mac_Build_for_PyPI
  timeoutInMinutes: 90
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - task: UsePythonVersion@0
    versionSpec: 3.6
    addToPath: true
  - script: |
      # The SYSTEM env var is used by the Makefile of glew and having it set trips it up
      unset SYSTEM
      /bin/bash -c "sudo xcode-select -s /Applications/Xcode_10.1.app/Contents/Developer"
      python3.6 build_scripts/build_usd.py --for-pypi --build-args USD,"-DPXR_BUILD_USD_TOOLS=OFF -DPXR_INSTALL_LOCATION=../pxr/pluginfo" --no-imaging --no-examples --no-tutorials --generator Xcode --build $HOME/USDgen/build --src $HOME/USDgen/src $HOME/USDinst -v
    displayName: 'Building USD'
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'usd-pypi-macOS'
      targetPath: "/Users/runner/USDinst"

